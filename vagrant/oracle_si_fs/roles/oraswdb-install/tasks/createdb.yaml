---
  # - name: set fact
  #   set_fact:
  #       create_listener: "{{ create_listener }}"
  #   with_items: "{{ oracle_databases }}"
  #   tags: set_fact

  # - include: listener.yml
  #   when: create_listener
  #   tags: listener

  - name: Check if database is already created
    become: yes
    become_user: oracle
    shell: grep {{ item.oracle_db_name }}:{{ oracle_home_db }} /etc/oratab |wc -l
    with_items: "{{oracle_databases}}"
    when: item.oracle_db_name is defined
    tags:
    - checkifdbexists
    register: checkdbexist
  - name: Create responsefile for dbca
    become: yes
    become_user: oracle
    template: src=templates/dbca_template_21c.j2 dest=/tmp/dbca_template_21c.rsp
    tags:
    - dbcaresponse

  

  # - debug: var="{{ oracle_home_db }}/bin/dbca -createDatabase -responseFile {{ oracle_rsp_stage }}/{{ oracle_dbca_rsp }} -silent -redoLogFileSize {{ item.0.redolog_size_in_mb }} {{ dbca_initParams }}"
  #   with_together:
  #    - "{{oracle_databases}}"
  #    - "{{checkdbexist.results}}"
  #
  - name: Create database(s)
    shell: "time {{ oracle_home_db }}/bin/dbca -createDatabase -responseFile /tmp/dbca_template_21c.rsp -silent -redoLogFileSize {{ redolog_size_in_mb }} "
    with_together:
       - "{{oracle_databases}}"
      #  - "{{checkdbexist.results}}"
    become: yes
    become_user: "{{ oracle_user }}"
    run_once: "{{ configure_cluster}}"
    # when: item.1.stdout != "1" and item.0.state |upper == "PRESENT"
    tags:
      - oradbcreate
    register: oradbcreate

  - debug: var=item
    with_items:
         - "{{ oradbcreate.results|map(attribute='stdout_lines')|list }}"
    run_once: "{{ configure_cluster}}"
    tags:
     - oradbcreate
    when: oradbcreate.changed
    ignore_errors: true

  - name: Add dotprofile (1)
    shell:  ps -ef | grep -w "ora_pmon_{{ ORACLE_SID }}" |grep -v grep | sed 's/^.*pmon_//g'
    with_items: "{{oracle_databases}}"
    register: dbs
    changed_when: False
    tags:
      - dotprofile_db
      - update_oratab

  # - name: Add dotprofile (2)
  #   template: src=dotprofile-db.j2 dest=~/.profile_{{ item.0.oracle_db_name }} owner={{ oracle_user }} group={{ oracle_group }} mode=775 backup=yes
  #   with_together:
  #   - "{{oracle_databases}}"
  #   - "{{dbs.results}}"
  #   tags: dotprofile_db

  - name: Update oratab
    lineinfile: dest=/etc/oratab line="{{ item.1.stdout }}:{{ oracle_home_db }}:N" state=present
    with_together:
    - "{{oracle_databases}}"
    - "{{dbs.results}}"
    # when: item.0.oracle_db_type != "SI"
    tags: update_oratab

  - name: Customize oratab for autostart
    lineinfile: dest=/etc/oratab line="{{ ORACLE_SID }}:{{ oracle_home_db }}:Y" state=present
    with_items:
         - "{{ oracle_databases }}"
    when: autostartup_service
    tags: update_oratab

  - name: Check if database is running
    shell: ps -ef |grep pmon |grep -v grep
    tags:
     - psout
    register: psout
    ignore_errors: true


  - debug: var=psout.stdout_lines
    tags:
     - psout